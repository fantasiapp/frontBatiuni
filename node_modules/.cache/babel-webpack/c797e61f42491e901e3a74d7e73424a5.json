{"ast":null,"code":"import { AnimateCSS } from \"src/app/shared/common/classes\";\nimport * as i0 from \"@angular/core\";\nexport let SlideTemplate = /*#__PURE__*/(() => {\n  class SlideTemplate extends AnimateCSS {\n    constructor(factoryResolver, view, cd) {\n      super(factoryResolver, view);\n      this.factoryResolver = factoryResolver;\n      this.view = view;\n      this.cd = cd;\n      this.ref = {\n        element: null,\n        view: null\n      };\n      this.contexts = [];\n      this.template = null;\n    }\n\n    indexChanged(k) {\n      k > 0 ? this.slide(\"left\", k) : this.slide(\"right\", -k);\n    }\n\n    get length() {\n      return this.contexts.length;\n    }\n\n    ngOnInit() {\n      if (!this.template) return;\n      this.ref = this.createTemplate(this.template, this.contexts[0]);\n      this.view.insert(this.ref.view);\n    }\n\n    slideIn(ref, direction) {\n      if (!ref.element) return;\n      this.animateWithClass(ref.element, 'slide-in-' + direction); //slide in the other direction\n\n      if (this.ref.element) {\n        this.animateWithClass(this.ref.element, 'slide-out-' + direction, () => {\n          this.view.remove(0);\n        });\n      }\n\n      this.ref = ref;\n    }\n\n    slide(direction, dx = 1) {\n      let next = direction == 'left' ? Math.min(this.contexts.length - 1, this.index + dx) : Math.max(0, this.index - dx);\n      if (this.index == next) return;\n      this._index = next;\n      let ref = this.createTemplate(this.template, this.contexts[this.index]);\n      this.view.insert(ref.view);\n      this.slideIn(ref, direction);\n    }\n\n    get first() {\n      return this.index == 0;\n    }\n\n    get last() {\n      return this.index == this.contexts.length - 1;\n    }\n\n  }\n\n  SlideTemplate.ɵfac = function SlideTemplate_Factory(t) {\n    return new (t || SlideTemplate)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  SlideTemplate.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: SlideTemplate,\n    selectors: [[\"\", \"slide-template\", \"\"]],\n    inputs: {\n      contexts: \"contexts\",\n      template: [\"slide-template\", \"template\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return SlideTemplate;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}