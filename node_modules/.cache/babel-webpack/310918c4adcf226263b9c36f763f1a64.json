{"ast":null,"code":"import { EventEmitter, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { DimensionMenu } from \"src/app/shared/common/classes\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../services/file-downloader.service\";\nconst _c0 = [\"view\"];\nconst _c1 = [\"file\"];\nconst _c2 = [\"delete\"];\n\nfunction UIPopup_ng_template_6_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 8);\n  }\n\n  if (rf & 2) {\n    const fileView_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", fileView_r5.safeUrl, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UIPopup_ng_template_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"object\", 9);\n    i0.ɵɵelement(1, \"embed\");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \" Ne peut pas afficher le PDF dans l'application \");\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function UIPopup_ng_template_6_ng_template_1_Template_div_click_4_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const fileView_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.openWindow(fileView_r5.url);\n    });\n    i0.ɵɵtext(5, \" Ouvrir le PDF localement. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fileView_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", fileView_r5.type);\n    i0.ɵɵattribute(\"data\", fileView_r5.safeUrl, i0.ɵɵsanitizeResourceUrl);\n  }\n}\n\nfunction UIPopup_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, UIPopup_ng_template_6_img_0_Template, 1, 1, \"img\", 6);\n    i0.ɵɵtemplate(1, UIPopup_ng_template_6_ng_template_1_Template, 6, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const fileView_r5 = ctx.$implicit;\n\n    const _r7 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngIf\", fileView_r5.type.startsWith(\"image\"))(\"ngIfElse\", _r7);\n  }\n}\n\nfunction UIPopup_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtext(0, \" Voudriez-vous supprimer l'annonce ? \");\n    i0.ɵɵelement(1, \"hr\", 11);\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵelementStart(3, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function UIPopup_ng_template_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.output && ctx_r14.output.next(true);\n    });\n    i0.ɵɵtext(4, \"Confirmer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function UIPopup_ng_template_8_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.output && ctx_r16.output.next(false);\n    });\n    i0.ɵɵtext(6, \"Annuler\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [\"*\"];\nconst TRANSITION_DURATION = 200;\nexport let UIPopup = /*#__PURE__*/(() => {\n  class UIPopup extends DimensionMenu {\n    constructor(cd, popupService) {\n      super();\n      this.cd = cd;\n      this.popupService = popupService;\n      this.fromService = false;\n      this.keepAlive = true;\n      this.output = null;\n      this.willClose = false; //extends destroy, no multiple inheritance :(\n\n      this.destroy$ = new Subject();\n    }\n\n    ngOnChanges(changes) {\n      if (changes['content'] || changes['params']) this.show();\n    }\n\n    show() {\n      this.view.clear();\n\n      if (this.content) {\n        this.view.createEmbeddedView(this.content, this.params);\n        this.open = true;\n      } else this.open = false;\n    }\n\n    ngOnInit() {\n      if (!this.fromService) return;\n      this.popupService.popups$.pipe(takeUntil(this.destroy$)).subscribe(params => {\n        this.params = params.context;\n        this.content = params.template;\n\n        if (params.name && !this.content) {\n          this.content = this[params.name];\n          if (params.output) this.output = params.output;\n        }\n\n        this.show();\n        this.cd.markForCheck();\n      });\n      this.popupService.dimension$.pipe(takeUntil(this.destroy$)).subscribe(dimension => {\n        this.dimension = dimension;\n        this.cd.markForCheck();\n      });\n    }\n\n    close() {\n      this.willClose = true;\n      setTimeout(() => {\n        var _a;\n\n        if (!this.keepAlive) this.view.clear();\n        this.willClose = false;\n        this.openChange.emit(this._open = false);\n        this.output = null;\n        if ((_a = this.params) === null || _a === void 0 ? void 0 : _a.close) this.params.close();\n        this.cd.markForCheck();\n      }, TRANSITION_DURATION);\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    openWindow(url) {\n      window.open(url);\n    }\n\n  }\n\n  UIPopup.ɵfac = function UIPopup_Factory(t) {\n    return new (t || UIPopup)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PopupService));\n  };\n\n  UIPopup.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UIPopup,\n    selectors: [[\"popup\"]],\n    viewQuery: function UIPopup_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n        i0.ɵɵviewQuery(_c1, 7, TemplateRef);\n        i0.ɵɵviewQuery(_c2, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.view = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.file = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deletePost = _t.first);\n      }\n    },\n    inputs: {\n      content: \"content\",\n      params: \"params\",\n      fromService: \"fromService\",\n      keepAlive: \"keepAlive\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 10,\n    vars: 4,\n    consts: [[1, \"cover\"], [1, \"menu\", \"cover-parent\", \"hosted-page\", \"flex\", \"column\", \"center\", \"space-children-margin\", \"center-text\"], [\"src\", \"assets/X.svg\", 1, \"position-absolute\", \"close-button\", 3, \"click\"], [\"view\", \"\"], [\"file\", \"\"], [\"delete\", \"\"], [\"class\", \"embedded-image\", 3, \"src\", 4, \"ngIf\", \"ngIfElse\"], [\"object\", \"\"], [1, \"embedded-image\", 3, \"src\"], [1, \"embedded-object\", \"cover-parent\", \"flex\", \"center\", 3, \"type\"], [1, \"external-links\", 3, \"click\"], [1, \"dashed\", 2, \"margin-left\", \"0 !important\"], [1, \"controls\", \"full-width\", \"flex\", \"space-around\"], [1, \"button\", \"active\", 3, \"click\"], [1, \"button\", \"passive\", 3, \"click\"]],\n    template: function UIPopup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"img\", 2);\n        i0.ɵɵlistener(\"click\", function UIPopup_Template_img_click_2_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(3, null, 3);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, UIPopup_ng_template_6_Template, 3, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(8, UIPopup_ng_template_8_Template, 7, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"open\", ctx.open && !ctx.willClose);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"open\", ctx.open && !ctx.willClose);\n      }\n    },\n    directives: [i1.NgIf],\n    styles: [\"[_ngcontent-%COMP%]:root{--notification-size: $notification-size}.page-content-with-tabs[_ngcontent-%COMP%]{width:100%;overflow-y:auto;overflow-x:hidden;touch-action:pan-y!important}.page-content-with-tabs[_ngcontent-%COMP%]{margin-top:150px;margin-top:calc(constant(safe-area-inset-top) + 150px);margin-top:calc(env(safe-area-inset-top) + 150px);margin-bottom:0;margin-bottom:calc(constant(safe-area-inset-bottom) + 0);margin-bottom:calc(env(safe-area-inset-bottom) + 0);height:calc(100vh - 220px - env(safe-area-inset-bottom))}.invert[_ngcontent-%COMP%]{filter:invert(1)}[_nghost-%COMP%]{position:absolute;z-index:-1000;width:100%;height:100%;display:flex;align-items:center;justify-content:center;color:#000;font-family:\\\"Poppins\\\";overflow:hidden auto;visibility:hidden}.open[_nghost-%COMP%]{visibility:visible;z-index:1000}.cover[_ngcontent-%COMP%]{z-index:-1;position:fixed;width:100vw;left:0;height:100vh;top:0;background-color:#ccc;opacity:0;transition:opacity .2s ease-out 0s}.cover.open[_ngcontent-%COMP%]{opacity:.5}.menu[_ngcontent-%COMP%]{box-shadow:0 3px 6px #aaa;opacity:0;transition:opacity .2s ease-out 0s;border-radius:5px}.menu.open[_ngcontent-%COMP%]{opacity:1}.close-button[_ngcontent-%COMP%]{right:15px;top:15px}.date[_ngcontent-%COMP%] {color:#0d6191}\"],\n    changeDetection: 0\n  });\n  return UIPopup;\n})();\n;\nexport let PopupService = /*#__PURE__*/(() => {\n  class PopupService {\n    constructor(downloader) {\n      this.downloader = downloader;\n      this.popups$ = new Subject();\n      this.dimension$ = new Subject();\n      this.defaultDimension = {\n        left: '20px',\n        top: '30px',\n        width: 'calc(100% - 40px)',\n        height: 'calc(100% - 60px)'\n      };\n    }\n\n    update(context) {\n      this.popups$.next({\n        context\n      });\n    }\n\n    show(template, context, dimension) {\n      this.popups$.next({\n        template,\n        context\n      });\n      this.dimension$.next(Object.assign(Object.assign({}, this.defaultDimension), dimension || {}));\n    }\n\n    openFile(file) {\n      if (!file.content) {\n        this.downloader.downloadFile(file.id).subscribe(file => this.openFile(file));\n        return;\n      }\n\n      this.popups$.next({\n        name: 'file',\n        context: this.downloader.createFileContext(file)\n      });\n      this.dimension$.next(this.defaultDimension);\n      return true;\n    }\n\n    openDeletePostDialog(source) {\n      this.popups$.next({\n        name: 'deletePost',\n        output: source\n      });\n      this.dimension$.next({\n        width: '100%',\n        height: '200px',\n        top: 'calc(50% - 100px)',\n        left: '0'\n      });\n      return new EventEmitter();\n    }\n\n    hide() {\n      this.popups$.next({\n        template: undefined\n      });\n    }\n\n  }\n\n  PopupService.ɵfac = function PopupService_Factory(t) {\n    return new (t || PopupService)(i0.ɵɵinject(i2.FileDownloader));\n  };\n\n  PopupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PopupService,\n    factory: PopupService.ɵfac,\n    providedIn: 'root'\n  });\n  return PopupService;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}