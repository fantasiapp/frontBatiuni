{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Select } from \"@ngxs/store\";\nimport { DataQueries, DataState } from \"src/models/new/data.state\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"src/app/shared/components/popup/popup.component\";\n\nfunction SuiviPME_div_2_h6_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 17);\n    i0.ɵɵtext(1, \" Signer le contrat \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SuiviPME_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"h6\", 13);\n    i0.ɵɵtext(2, \" Le contrat \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function SuiviPME_div_2_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.signContract();\n    });\n    i0.ɵɵelement(4, \"file-svg\", 15);\n    i0.ɵɵtemplate(5, SuiviPME_div_2_h6_5_Template, 2, 0, \"h6\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isNotSignedByUser);\n  }\n}\n\nfunction SuiviPME_suivi_chantier_date_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"suivi-chantier_date\", 18);\n  }\n\n  if (rf & 2) {\n    const date_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", date_r7)(\"mission\", ctx_r1.mission)(\"reloadMission\", ctx_r1.reloadMission);\n  }\n}\n\nfunction SuiviPME_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"comment\", 19);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"edit\", true);\n  }\n} // export type Task = PostDetail & {validationImage:string, invalidationImage:string}\n// , validationImage:\"assets/suivi-valider.svg\", invalidationImage:\"assets/suivi-refuser.svg\"\n\n\nexport class SuiviPME {\n  constructor(store, popup, cd) {\n    this.store = store;\n    this.popup = popup;\n    this.cd = cd;\n    this.company = null;\n    this.subContractor = null;\n    this.track = {};\n    this.isNotSigned = true;\n    this.isNotSignedByUser = true;\n    this.dates = [];\n    this.currentDateId = null;\n    this.tasks = null;\n    this.companyName = \"\";\n    this.contactName = \"\";\n    this.view = \"PME\";\n    this._mission = null;\n    this.swipemenu = false;\n\n    this.reloadMission = dateOld => {\n      let dateResult = dateOld;\n      this.mission = this.store.selectSnapshot(DataQueries.getById('Mission', this.mission.id));\n      this.dates.forEach(dateNew => {\n        if (dateNew.value == dateOld.value) {\n          dateResult = dateNew;\n        }\n      });\n      return [dateResult, this.mission];\n    };\n  }\n\n  get mission() {\n    return this._mission;\n  }\n\n  set mission(mission) {\n    this.view = this.store.selectSnapshot(DataState.view);\n    this._mission = mission;\n    this.company = mission ? this.store.selectSnapshot(DataQueries.getById('Company', mission.company)) : null;\n    this.subContractor = mission ? this.store.selectSnapshot(DataQueries.getById('Company', mission.subContractor)) : null;\n\n    if (mission) {\n      this.isNotSigned = !(mission.signedByCompany && mission.signedBySubContractor);\n      this.isNotSignedByUser = !mission.signedByCompany && this.view == 'PME' || !mission.signedBySubContractor && this.view == 'ST';\n      this.computeDates(mission);\n      this.companyName = this.view == 'ST' ? this.subContractor.name : this.company.name;\n      this.contactName = this.view == 'ST' ? this.mission.subContractorName : \"\";\n    }\n  }\n\n  computeDates(mission) {\n    let supervisionsTaks = [];\n    this.tasks = this.store.selectSnapshot(DataQueries.getMany('DetailedPost', mission.details)).map(detail => ({\n      id: detail.id,\n      date: detail.date,\n      content: detail.content,\n      validated: detail.validated,\n      refused: detail.refused,\n      supervisions: detail.supervisions,\n      supervisionsObject: this.computeSupervisionsforTask(detail.supervisions, supervisionsTaks),\n      validationImage: SuiviPME.computeTaskImage(detail, \"validated\"),\n      invalidationImage: SuiviPME.computeTaskImage(detail, \"refused\")\n    }));\n    this.dates = mission.dates.map((value, id) => ({\n      id: id,\n      value: value,\n      tasks: this.tasks,\n      selectedTasks: this.computeSelectedTask(value),\n      taskWithoutDouble: this.dateWithoutDouble(),\n      view: this.view,\n      supervisions: this.computeSupervisionsForMission(value, supervisionsTaks)\n    }));\n  }\n\n  computeSupervisionsforTask(supervisionsId, supervisionsTask) {\n    let supervisions = [];\n    supervisionsId.forEach(id => {\n      let supervision = this.store.selectSnapshot(DataQueries.getById('Supervision', id));\n\n      if (supervision) {\n        supervisions.push(supervision);\n        supervisionsTask.push(supervision.id);\n      }\n    });\n    return supervisions;\n  }\n\n  computeSupervisionsForMission(date, supervisionsTask) {\n    let supervisions = [];\n    let allSupervisions = this.mission.supervisions.map(id => {\n      let supervision = this.store.selectSnapshot(DataQueries.getById('Supervision', id));\n\n      if (supervision && supervision.date == date && !supervisionsTask.includes(supervision.id)) {\n        return supervision;\n      }\n\n      return null;\n    });\n\n    for (let index in allSupervisions) {\n      if (allSupervisions[index]) {\n        supervisions.push(allSupervisions[index]);\n      }\n    }\n\n    return supervisions;\n  }\n\n  static computeTaskImage(task, type) {\n    if (type === \"validated\") {\n      if (task.validated && !task.refused) {\n        return \"assets/suivi-valider-OK.svg\";\n      } else {\n        return \"assets/suivi-valider.svg\";\n      }\n    } else {\n      if (!task.validated && task.refused) {\n        return \"assets/suivi-refuser-OK.svg\";\n      } else {\n        return \"assets/suivi-refuser.svg\";\n      }\n    }\n  }\n\n  dateWithoutDouble() {\n    let listWithOutDouble = [];\n    let listWithOutDoubleStr = [];\n    let dictionary = Object.assign({}, ...this.tasks.map(task => ({\n      [task.content]: task\n    })));\n    Object.keys(dictionary).forEach(key => {\n      if (!listWithOutDoubleStr.includes(dictionary[key])) {\n        listWithOutDouble.push(dictionary[key]);\n        listWithOutDoubleStr.push(key);\n      }\n    });\n    return listWithOutDouble;\n  }\n\n  computeSelectedTask(date) {\n    let selectedTask = [];\n    this.tasks.forEach(task => this.computeSelectedTaskAction(selectedTask, date, task));\n    return selectedTask;\n  }\n\n  computeSelectedTaskAction(selectedTask, date, task) {\n    if (date == task.date) {\n      selectedTask.push(task);\n    }\n  }\n\n  signContract() {\n    this.popup.openSignContractDialog(this.mission);\n  }\n\n}\n\nSuiviPME.ɵfac = function SuiviPME_Factory(t) {\n  return new (t || SuiviPME)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.PopupService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nSuiviPME.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SuiviPME,\n  selectors: [[\"suivi-chantier\"]],\n  inputs: {\n    mission: \"mission\"\n  },\n  decls: 26,\n  vars: 8,\n  consts: [[1, \"container\", \"hosted-page\", \"space-children-margin\"], [3, \"collapsed\", \"application\", \"post\"], [\"class\", \"contrat\", 4, \"ngIf\"], [1, \"suivi-notification\", \"flex\", \"column\", 2, \"margin-left\", \"0\"], [1, \"font-Poppins\", 2, \"margin\", \"5px\"], [1, \"full-width\", \"flex\", \"column\"], [3, \"date\", \"mission\", \"reloadMission\", 4, \"ngFor\", \"ngForOf\"], [1, \"newDate\"], [\"src\", \"assets/plusBlue.svg\"], [2, \"height\", \"30px\"], [3, \"open\", \"openChange\"], [\"comment\", \"\"], [1, \"contrat\"], [1, \"title\", \"font-Poppins\", 2, \"margin-bottom\", \"20px\"], [1, \"flex\", \"center-cross\", \"space-around\", 3, \"click\"], [\"name\", \"Contrat\", \"color\", \"red\"], [\"class\", \"contrat-title font-Poppins\", 4, \"ngIf\"], [1, \"contrat-title\", \"font-Poppins\"], [3, \"date\", \"mission\", \"reloadMission\"], [3, \"edit\"]],\n  template: function SuiviPME_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"annonce-resume\", 1);\n      i0.ɵɵtemplate(2, SuiviPME_div_2_Template, 6, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"h6\", 4);\n      i0.ɵɵtext(5, \"Suivi du chantier\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"h6\", 4);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵtemplate(9, SuiviPME_suivi_chantier_date_9_Template, 1, 3, \"suivi-chantier_date\", 6);\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"img\", 8);\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \"Ajouter une nouvelle date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"swipeup\", 10);\n      i0.ɵɵlistener(\"openChange\", function SuiviPME_Template_swipeup_openChange_15_listener($event) {\n        return ctx.swipemenu = $event;\n      });\n      i0.ɵɵelementStart(16, \"li\");\n      i0.ɵɵtext(17, \"Modifier les horaires de pr\\u00E9sence\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"li\");\n      i0.ɵɵtext(19, \"Appeler le 06 21 94 03 86\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"li\");\n      i0.ɵɵtext(21, \"Cl\\u00F4turer la mission\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"li\");\n      i0.ɵɵtext(23, \"Dupliquer l'annonce\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, SuiviPME_ng_template_24_Template, 1, 1, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"collapsed\", true)(\"application\", false)(\"post\", ctx.mission);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isNotSigned);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate2(\"Avec \", ctx.contactName, \" entreprise \", ctx.companyName, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.dates);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"open\", ctx.swipemenu);\n    }\n  },\n  styles: [\"[_ngcontent-%COMP%]:root{--notification-size: $notification-size}.page-content-with-tabs[_ngcontent-%COMP%]{width:100%;overflow-y:auto;overflow-x:hidden;touch-action:pan-y!important}.page-content-with-tabs[_ngcontent-%COMP%]{margin-top:150px;margin-top:calc(constant(safe-area-inset-top) + 150px);margin-top:calc(env(safe-area-inset-top) + 150px);margin-bottom:0;margin-bottom:calc(constant(safe-area-inset-bottom) + 0);margin-bottom:calc(env(safe-area-inset-bottom) + 0);height:calc(100vh - 220px - env(safe-area-inset-bottom))}.invert[_ngcontent-%COMP%]{filter:invert(1)}[_nghost-%COMP%]{display:block;width:100%}.annonce[_ngcontent-%COMP%]{background:#FFFFFF!important;color:#000}.dashed[_ngcontent-%COMP%]{margin-left:-30px!important;display:block;width:100vw;border-top:1px dashed black}.contrat-title[_ngcontent-%COMP%]{color:#0d6191;font-size:1rem}.suivi-notification[_ngcontent-%COMP%]{width:100vw;margin-left:-30px;padding-left:30px;color:#fff;height:80px;background-color:#0d6191}.suivi-notification[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{font-weight:200;font-size:1em}details[_ngcontent-%COMP%]   summary[_ngcontent-%COMP%]::-webkit-details-marker{display:none!important}.subtitle[_ngcontent-%COMP%]{color:#0d6191}.red[_ngcontent-%COMP%]{filter:invert(24%) sepia(89%) saturate(7468%) hue-rotate(360deg) brightness(104%) contrast(123%)}.green[_ngcontent-%COMP%]{filter:invert(74%) sepia(69%) saturate(5734%) hue-rotate(85deg) brightness(116%) contrast(131%)}\"],\n  changeDetection: 0\n});\n\n__decorate([Select(DataQueries.currentProfile)], SuiviPME.prototype, \"currentProfile$\", void 0);","map":null,"metadata":{},"sourceType":"module"}