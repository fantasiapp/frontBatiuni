{"ast":null,"code":"import _asyncToGenerator from \"/Users/jlw/Documents/frontBatiuni/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { ForgotPassword } from \"src/models/auth/auth.actions\";\nimport { take } from \"rxjs/operators\";\nimport { ComplexPassword, MatchField, setErrors } from \"src/validators/verify\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngxs/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../common/formerrors\";\nimport * as i5 from \"@angular/common\";\n\nfunction ForgotPasswordForm_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins 8 caract\\u00E8res\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordForm_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en majuscule\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordForm_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en miniscule\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordForm_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins 8 caract\\u00E8res\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordForm_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en majuscule\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordForm_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en miniscule\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class ForgotPasswordForm {\n  constructor(route, router, cd, store) {\n    this.route = route;\n    this.router = router;\n    this.cd = cd;\n    this.store = store;\n    this.forgotPassword = new FormGroup({\n      password: new FormControl('', [ComplexPassword()]),\n      confirmedPassword: new FormControl('', [MatchField('password', 'Le mot de passe')])\n    });\n  }\n\n  ngOnInit() {\n    this.token = this.route.snapshot.params.token;\n  }\n\n  onSubmit(e) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let {\n        password\n      } = _this.forgotPassword.value;\n\n      _this.store.dispatch(new ForgotPassword(_this.token, password)).pipe(take(1)).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (success) {\n          let res = yield _this.router.navigate(['', 'connexion']);\n\n          if (!res) {\n            setErrors(_this.forgotPassword, {\n              all: 'Erreur inattendue. (500 ?)'\n            });\n\n            _this.cd.markForCheck();\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(), errors => {\n        setErrors(_this.forgotPassword, errors);\n\n        _this.cd.markForCheck();\n      });\n    })();\n  }\n\n}\n\nForgotPasswordForm.ɵfac = function ForgotPasswordForm_Factory(t) {\n  return new (t || ForgotPasswordForm)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Store));\n};\n\nForgotPasswordForm.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ForgotPasswordForm,\n  selectors: [[\"forgot-password-form\"]],\n  decls: 20,\n  vars: 8,\n  consts: [[1, \"full-height\", \"form-control\", \"curved-border\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-title\"], [1, \"form-input\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-element\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"confirmedPassword\", 1, \"form-element\"], [1, \"form-action\"], [1, \"button\", \"discover\", \"gradient\", 2, \"width\", \"250px\", 3, \"disabled\"], [1, \"error\"]],\n  template: function ForgotPasswordForm_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordForm_Template_form_ngSubmit_0_listener($event) {\n        return ctx.onSubmit($event);\n      });\n      i0.ɵɵelementStart(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Modifier le mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Nouveau mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵtemplate(7, ForgotPasswordForm_div_7_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(8, ForgotPasswordForm_div_8_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(9, ForgotPasswordForm_div_9_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 2);\n      i0.ɵɵelementStart(11, \"label\");\n      i0.ɵɵtext(12, \"Confirmation de mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵtemplate(14, ForgotPasswordForm_div_14_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(15, ForgotPasswordForm_div_15_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(16, ForgotPasswordForm_div_16_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 6);\n      i0.ɵɵelementStart(18, \"button\", 7);\n      i0.ɵɵtext(19, \"Valider\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.forgotPassword);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"password\").touched && (ctx.forgotPassword.get(\"password\").errors == null ? null : ctx.forgotPassword.get(\"password\").errors.minlength));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"password\").touched && (ctx.forgotPassword.get(\"password\").errors == null ? null : ctx.forgotPassword.get(\"password\").errors.uppercase));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"password\").touched && (ctx.forgotPassword.get(\"password\").errors == null ? null : ctx.forgotPassword.get(\"password\").errors.lowercase));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"confirmedPassword\").touched && (ctx.forgotPassword.get(\"confirmedPassword\").errors == null ? null : ctx.forgotPassword.get(\"confirmedPassword\").errors.minlength));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"confirmedPassword\").touched && (ctx.forgotPassword.get(\"confirmedPassword\").errors == null ? null : ctx.forgotPassword.get(\"confirmedPassword\").errors.uppercase));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"confirmedPassword\").touched && (ctx.forgotPassword.get(\"confirmedPassword\").errors == null ? null : ctx.forgotPassword.get(\"confirmedPassword\").errors.lowercase));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.forgotPassword.touched || ctx.forgotPassword.status === \"INVALID\");\n    }\n  },\n  directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.ControlErrorsDirective, i5.NgIf],\n  styles: [\"[_ngcontent-%COMP%]:root {\\n  --notification-size: $notification-size;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  width: 100%;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  touch-action: pan-y !important;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  margin-top: 150px;\\n  margin-top: calc(constant(safe-area-inset-top) + 150px);\\n  margin-top: calc(env(safe-area-inset-top) + 150px);\\n  margin-bottom: 0;\\n  margin-bottom: calc(constant(safe-area-inset-bottom) + 0);\\n  margin-bottom: calc(env(safe-area-inset-bottom) + 0);\\n  height: calc(100vh - 220px - env(safe-area-inset-bottom));\\n}\\n\\n.invert[_ngcontent-%COMP%] {\\n  filter: invert(1);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"],\n  changeDetection: 0\n});","map":{"version":3,"sources":["/Users/jlw/Documents/frontBatiuni/src/app/shared/forms/forgot.password.ts"],"names":["FormControl","FormGroup","ForgotPassword","take","ComplexPassword","MatchField","setErrors","i0","i1","i2","i3","i4","i5","ForgotPasswordForm_div_7_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ForgotPasswordForm_div_8_Template","ForgotPasswordForm_div_9_Template","ForgotPasswordForm_div_14_Template","ForgotPasswordForm_div_15_Template","ForgotPasswordForm_div_16_Template","ForgotPasswordForm","constructor","route","router","cd","store","forgotPassword","password","confirmedPassword","ngOnInit","token","snapshot","params","onSubmit","e","value","dispatch","pipe","subscribe","success","res","navigate","all","markForCheck","errors","ɵfac","ForgotPasswordForm_Factory","t","ɵɵdirectiveInject","ActivatedRoute","Router","ChangeDetectorRef","Store","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ForgotPasswordForm_Template","ɵɵlistener","ForgotPasswordForm_Template_form_ngSubmit_0_listener","$event","ɵɵelement","ɵɵtemplate","ɵɵproperty","ɵɵadvance","get","touched","minlength","uppercase","lowercase","status","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","ControlErrorsDirective","NgIf","styles","changeDetection"],"mappings":"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","sourcesContent":["import { FormControl, FormGroup } from \"@angular/forms\";\nimport { ForgotPassword } from \"src/models/auth/auth.actions\";\nimport { take } from \"rxjs/operators\";\nimport { ComplexPassword, MatchField, setErrors } from \"src/validators/verify\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngxs/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../common/formerrors\";\nimport * as i5 from \"@angular/common\";\nfunction ForgotPasswordForm_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins 8 caract\\u00E8res\");\n    i0.ɵɵelementEnd();\n} }\nfunction ForgotPasswordForm_div_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en majuscule\");\n    i0.ɵɵelementEnd();\n} }\nfunction ForgotPasswordForm_div_9_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en miniscule\");\n    i0.ɵɵelementEnd();\n} }\nfunction ForgotPasswordForm_div_14_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins 8 caract\\u00E8res\");\n    i0.ɵɵelementEnd();\n} }\nfunction ForgotPasswordForm_div_15_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en majuscule\");\n    i0.ɵɵelementEnd();\n} }\nfunction ForgotPasswordForm_div_16_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Doit contenir au moins une lettre en miniscule\");\n    i0.ɵɵelementEnd();\n} }\nexport class ForgotPasswordForm {\n    constructor(route, router, cd, store) {\n        this.route = route;\n        this.router = router;\n        this.cd = cd;\n        this.store = store;\n        this.forgotPassword = new FormGroup({\n            password: new FormControl('', [ComplexPassword()]),\n            confirmedPassword: new FormControl('', [MatchField('password', 'Le mot de passe')])\n        });\n    }\n    ngOnInit() {\n        this.token = this.route.snapshot.params.token;\n    }\n    async onSubmit(e) {\n        let { password } = this.forgotPassword.value;\n        this.store.dispatch(new ForgotPassword(this.token, password))\n            .pipe(take(1)).subscribe(async (success) => {\n            let res = await this.router.navigate(['', 'connexion']);\n            if (!res) {\n                setErrors(this.forgotPassword, { all: 'Erreur inattendue. (500 ?)' });\n                this.cd.markForCheck();\n            }\n        }, errors => {\n            setErrors(this.forgotPassword, errors);\n            this.cd.markForCheck();\n        });\n    }\n}\nForgotPasswordForm.ɵfac = function ForgotPasswordForm_Factory(t) { return new (t || ForgotPasswordForm)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Store)); };\nForgotPasswordForm.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ForgotPasswordForm, selectors: [[\"forgot-password-form\"]], decls: 20, vars: 8, consts: [[1, \"full-height\", \"form-control\", \"curved-border\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-title\"], [1, \"form-input\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-element\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"confirmedPassword\", 1, \"form-element\"], [1, \"form-action\"], [1, \"button\", \"discover\", \"gradient\", 2, \"width\", \"250px\", 3, \"disabled\"], [1, \"error\"]], template: function ForgotPasswordForm_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordForm_Template_form_ngSubmit_0_listener($event) { return ctx.onSubmit($event); });\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Modifier le mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"Nouveau mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, ForgotPasswordForm_div_7_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(8, ForgotPasswordForm_div_8_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(9, ForgotPasswordForm_div_9_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵelementStart(11, \"label\");\n        i0.ɵɵtext(12, \"Confirmation de mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵtemplate(14, ForgotPasswordForm_div_14_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(15, ForgotPasswordForm_div_15_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(16, ForgotPasswordForm_div_16_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6);\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵtext(19, \"Valider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPassword);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"password\").touched && (ctx.forgotPassword.get(\"password\").errors == null ? null : ctx.forgotPassword.get(\"password\").errors.minlength));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"password\").touched && (ctx.forgotPassword.get(\"password\").errors == null ? null : ctx.forgotPassword.get(\"password\").errors.uppercase));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"password\").touched && (ctx.forgotPassword.get(\"password\").errors == null ? null : ctx.forgotPassword.get(\"password\").errors.lowercase));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"confirmedPassword\").touched && (ctx.forgotPassword.get(\"confirmedPassword\").errors == null ? null : ctx.forgotPassword.get(\"confirmedPassword\").errors.minlength));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"confirmedPassword\").touched && (ctx.forgotPassword.get(\"confirmedPassword\").errors == null ? null : ctx.forgotPassword.get(\"confirmedPassword\").errors.uppercase));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPassword.get(\"confirmedPassword\").touched && (ctx.forgotPassword.get(\"confirmedPassword\").errors == null ? null : ctx.forgotPassword.get(\"confirmedPassword\").errors.lowercase));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.forgotPassword.touched || ctx.forgotPassword.status === \"INVALID\");\n    } }, directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.ControlErrorsDirective, i5.NgIf], styles: [\"[_ngcontent-%COMP%]:root {\\n  --notification-size: $notification-size;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  width: 100%;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  touch-action: pan-y !important;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  margin-top: 150px;\\n  margin-top: calc(constant(safe-area-inset-top) + 150px);\\n  margin-top: calc(env(safe-area-inset-top) + 150px);\\n  margin-bottom: 0;\\n  margin-bottom: calc(constant(safe-area-inset-bottom) + 0);\\n  margin-bottom: calc(env(safe-area-inset-bottom) + 0);\\n  height: calc(100vh - 220px - env(safe-area-inset-bottom));\\n}\\n\\n.invert[_ngcontent-%COMP%] {\\n  filter: invert(1);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"], changeDetection: 0 });\n"]},"metadata":{},"sourceType":"module"}