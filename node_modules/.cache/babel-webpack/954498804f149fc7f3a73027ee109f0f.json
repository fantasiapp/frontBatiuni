{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Select } from \"@ngxs/store\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Destroy$ } from \"src/app/shared/common/classes\";\nimport { CalendarUI } from \"src/app/shared/components/calendar/calendar.ui\";\nimport { nameToAvailability } from \"src/models/new/data.mapper\";\nimport { DataQueries } from \"src/models/new/data.state\";\nimport { ModifyAvailability } from \"src/models/new/user/user.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"src/app/shared/components/swipeup/swipeup.component\";\nconst _c0 = [\"calendar\"];\n\nfunction AvailabilitiesComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"header\", 1);\n    i0.ɵɵelementStart(2, \"span\", 2);\n    i0.ɵɵtext(3, \"Mes disponibilit\\u00E9s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4);\n    i0.ɵɵelementStart(6, \"calendar\", 5, 6);\n    i0.ɵɵlistener(\"dayClick\", function AvailabilitiesComponent_ng_container_0_Template_calendar_dayClick_6_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onDayClicked($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassMap(ctx_r0.currentAvailability);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.availabilities);\n  }\n}\n\nexport class AvailabilitiesComponent extends Destroy$ {\n  constructor(store, swipeupService) {\n    super();\n    this.store = store;\n    this.swipeupService = swipeupService;\n    this.availabilities = [];\n    this.items = [{\n      name: 'Disponible',\n      class: 'disponible',\n      click: () => {\n        this.setCalendarDayState('available');\n      }\n    }, {\n      name: 'Disponible sous-conditions',\n      class: 'sous-conditions',\n      click: () => {\n        this.setCalendarDayState('availablelimits');\n      }\n    }, {\n      name: 'Pas disponible',\n      class: 'pas-disponible',\n      click: () => {\n        this.setCalendarDayState('unavailable');\n      }\n    }, {\n      name: 'Non renseigné',\n      class: 'non-renseigne',\n      click: () => {\n        this.setCalendarDayState('nothing');\n      }\n    }];\n    this.currentAvailability = 'nothing';\n  }\n\n  ngOnInit() {\n    this.profile$.pipe(takeUntil(this.destroy$)).subscribe(profile => {\n      var _a;\n\n      this.availabilities = this.store.selectSnapshot(DataQueries.getMany('Disponibility', profile.company.availabilities)).map(availability => ({\n        date: availability.date,\n        availability: nameToAvailability(availability.nature)\n      }));\n      const now = new Date().toISOString().slice(0, 10);\n      this.currentAvailability = ((_a = this.availabilities.find(day => day.date == now)) === null || _a === void 0 ? void 0 : _a.availability) || 'nothing';\n    });\n  }\n\n  submit(calendar) {\n    this.store.dispatch(ModifyAvailability.fromCalendar(calendar));\n  }\n\n  onDayClicked(_) {\n    this.swipeupService.show({\n      type: 'menu',\n      items: this.items,\n      hideOnClick: true\n    });\n  } //all changes are sent to the server only after the component is destroyed\n\n\n  setCalendarDayState(state) {\n    this.calendar.setCurrentDayState(state);\n    const now = new Date().toISOString().slice(0, 10),\n          updatedDate = this.calendar.selection[0];\n    if (now == updatedDate) this.currentAvailability = state;\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.submit(this.calendar);\n  }\n\n}\n\nAvailabilitiesComponent.ɵfac = function AvailabilitiesComponent_Factory(t) {\n  return new (t || AvailabilitiesComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.SwipeupService));\n};\n\nAvailabilitiesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AvailabilitiesComponent,\n  selectors: [[\"availabilities\"]],\n  viewQuery: function AvailabilitiesComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, CalendarUI);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.calendar = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [1, \"clear-margin\", \"full-width\", \"sticky-header\", \"flex\", \"center-cross\"], [1, \"grow\", \"text-light-emphasis\"], [1, \"current-availability\"], [1, \"hosted-page\", \"flex\", \"column\", \"center-cross\", \"space-children-margin\", \"page-content\"], [3, \"value\", \"dayClick\"], [\"calendar\", \"\"]],\n  template: function AvailabilitiesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AvailabilitiesComponent_ng_container_0_Template, 8, 3, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.profile$));\n    }\n  },\n  styles: [\"[_ngcontent-%COMP%]:root{--notification-size: $notification-size}.page-content-with-tabs[_ngcontent-%COMP%], [_nghost-%COMP%]{width:100%;overflow-y:auto;overflow-x:hidden;touch-action:pan-y!important}[_nghost-%COMP%]{display:block;height:calc(100vh - 70px - env(safe-area-inset-bottom))}.page-content-with-tabs[_ngcontent-%COMP%]{margin-top:150px;margin-top:calc(constant(safe-area-inset-top) + 150px);margin-top:calc(env(safe-area-inset-top) + 150px);margin-bottom:0;margin-bottom:calc(constant(safe-area-inset-bottom) + 0);margin-bottom:calc(env(safe-area-inset-bottom) + 0);height:calc(100vh - 220px - env(safe-area-inset-bottom))}.invert[_ngcontent-%COMP%]{filter:invert(1)}.current-availability[_ngcontent-%COMP%]{display:inline-block;width:25px;height:25px}\"],\n  changeDetection: 0\n});\n\n__decorate([Select(DataQueries.currentProfile)], AvailabilitiesComponent.prototype, \"profile$\", void 0);","map":null,"metadata":{},"sourceType":"module"}