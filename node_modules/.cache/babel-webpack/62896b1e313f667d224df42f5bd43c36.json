{"ast":null,"code":"import { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { UIDefaultAccessor } from \"src/app/shared/common/classes\";\nimport { filterMap, focusOutside, makeid } from \"src/app/shared/common/functions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../box/checkbox.component\";\nimport * as i3 from \"../box/radiobox.component\";\n\nfunction OptionsModel_ul_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵlistener(\"click\", function OptionsModel_ul_3_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.onChange([\"delete\", i_r4]);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const choice_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(choice_r3.name);\n  }\n}\n\nfunction OptionsModel_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 6);\n    i0.ɵɵtemplate(1, OptionsModel_ul_3_li_1_Template, 2, 1, \"li\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"multiple\", ctx_r0._type[0] == \"checkbox\");\n    i0.ɵɵattribute(\"data-if-empty\", ctx_r0.ifEmpty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.value);\n  }\n}\n\nfunction OptionsModel_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"img\", 13);\n    i0.ɵɵlistener(\"click\", function OptionsModel_div_5_div_1_Template_img_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.showDropDown = false;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"input\", 14);\n    i0.ɵɵlistener(\"input\", function OptionsModel_div_5_div_1_Template_input_input_2_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.filterOptions($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OptionsModel_div_5_div_2_ul_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"checkbox\", 20);\n    i0.ɵɵlistener(\"valueChange\", function OptionsModel_div_5_div_2_ul_1_li_1_Template_checkbox_valueChange_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const option_r16 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(4);\n      return ctx_r18.onChange([\"toggle\", option_r16.id]);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r16.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r15.value.includes(option_r16));\n  }\n}\n\nfunction OptionsModel_div_5_div_2_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, OptionsModel_div_5_div_2_ul_1_li_1_Template, 3, 2, \"li\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.availableOptions);\n  }\n}\n\nfunction OptionsModel_div_5_div_2_ng_template_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"radiobox\", 21);\n    i0.ɵɵlistener(\"valueChange\", function OptionsModel_div_5_div_2_ng_template_2_li_1_Template_radiobox_valueChange_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const option_r21 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(4);\n      return ctx_r23.onChange([\"toggle\", option_r21.id]);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r21 = ctx.$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r21.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", ctx_r20._type[1])(\"value\", ctx_r20.value.includes(option_r21));\n  }\n}\n\nfunction OptionsModel_div_5_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, OptionsModel_div_5_div_2_ng_template_2_li_1_Template, 3, 3, \"li\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.availableOptions);\n  }\n}\n\nfunction OptionsModel_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, OptionsModel_div_5_div_2_ul_1_Template, 2, 1, \"ul\", 16);\n    i0.ɵɵtemplate(2, OptionsModel_div_5_div_2_ng_template_2_Template, 2, 1, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = i0.ɵɵreference(3);\n\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8._type[0] == \"checkbox\")(\"ngIfElse\", _r13);\n  }\n}\n\nfunction OptionsModel_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, OptionsModel_div_5_div_1_Template, 3, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, OptionsModel_div_5_div_2_Template, 4, 2, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.searchable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.options.length);\n  }\n}\n\nexport let OptionsModel = /*#__PURE__*/(() => {\n  class OptionsModel extends UIDefaultAccessor {\n    constructor(ref, cd, zone) {\n      super(cd);\n      this.ref = ref;\n      this.cd = cd;\n      this.zone = zone;\n      this.search = '';\n      this.showDropDown = false;\n      this._options = [];\n      this.showChosenItems = true;\n      this.searchable = true;\n      this.ifEmpty = '';\n      this._type = ['checkbox', ''];\n      this._value = [];\n    }\n\n    onToggle(e) {\n      this.showDropDown = !this.showDropDown;\n\n      if (this.showDropDown) {\n        setTimeout(() => {\n          const searchInput = this.ref.nativeElement.querySelector('input[type=text]');\n          searchInput === null || searchInput === void 0 ? void 0 : searchInput.scrollIntoView(true);\n        });\n      }\n    }\n\n    ngOnInit() {\n      OptionsModel.instances.push(this);\n      if (!OptionsModel.listening) window.addEventListener('click', OptionsModel.listener);\n    }\n\n    forceClose() {\n      this.showDropDown = false;\n      this.cd.detectChanges();\n    }\n\n    get options() {\n      return this._options;\n    }\n\n    set options(val) {\n      this.search = '';\n      this._options = val;\n      this.value = [];\n    }\n\n    set type(value) {\n      if (value == 'checkbox') this._type = [value, ''];else {\n        this._type = [value, makeid(8)];\n      }\n      ;\n    }\n\n    filterOptions(e) {\n      this.search = e.target.value;\n    }\n\n    get availableOptions() {\n      return this.options.filter(option => option.name.toLowerCase().includes(this.search.toLowerCase()));\n    }\n\n    getInput(action) {\n      const isRadio = this._type[0] != 'checkbox';\n\n      if (action[0] == 'delete') {\n        let idx = action[1],\n            id = this.value[idx].id;\n        return this.value.filter(option => option.id != id);\n      } else {\n        let id = action[1],\n            option = this.options.find(option => option.id == id);\n        if (isRadio) return [option];\n        if (this.value.find(option => option.id == id)) return this.value.filter(option => option.id != id);else return [...this.value, option];\n      }\n    }\n\n    ngOnDestroy() {\n      const index = OptionsModel.instances.indexOf(this);\n      if (index >= 0) OptionsModel.instances.splice(index, 1);\n\n      if (OptionsModel.instances.length == 0) {\n        window.removeEventListener('click', OptionsModel.listener);\n        OptionsModel.listening = false;\n      }\n    }\n\n    writeValue(value) {\n      const ids = value.map(({\n        id\n      }) => id);\n      this.value = filterMap(this.options, option => {\n        return ids.includes(option.id) ? option : null;\n      });\n      this.cd.markForCheck();\n    }\n\n  }\n\n  OptionsModel.instances = []; //clicking on selected item closes the list\n\n  OptionsModel.listener = e => {\n    const focused = e.target,\n          mounted = focusOutside(null, focused);\n    if (!mounted) return;\n\n    for (const option of OptionsModel.instances) if (focusOutside(option.ref.nativeElement, focused)) {\n      option.forceClose();\n      continue;\n    }\n  };\n\n  OptionsModel.listening = false;\n\n  OptionsModel.ɵfac = function OptionsModel_Factory(t) {\n    return new (t || OptionsModel)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  OptionsModel.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OptionsModel,\n    selectors: [[\"options\"]],\n    inputs: {\n      options: \"options\",\n      showChosenItems: \"showChosenItems\",\n      searchable: \"searchable\",\n      ifEmpty: \"ifEmpty\",\n      type: \"type\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: OptionsModel\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"cover-parent\", \"flex\", \"column\", \"center-cross\"], [1, \"form-select\", \"full-width\"], [1, \"input-select\", \"full-width\", \"flex\", \"row\", \"center-cross\"], [\"class\", \"chosen-items\", 3, \"multiple\", 4, \"ngIf\"], [\"src\", \"assets/arrowdown.svg\", 3, \"click\"], [\"class\", \"dropdown\", 4, \"ngIf\"], [1, \"chosen-items\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"dropdown\"], [\"class\", \"dropdown-choices full-width flex row center-cross\", 4, \"ngIf\"], [\"class\", \"dropdown-content\", 4, \"ngIf\"], [1, \"dropdown-choices\", \"full-width\", \"flex\", \"row\", \"center-cross\"], [\"src\", \"assets/Rechercher.svg\", 3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Rechercher un m\\u00E9tier\", 1, \"form-search\", 3, \"input\"], [1, \"dropdown-content\"], [4, \"ngIf\", \"ngIfElse\"], [\"radioMenu\", \"\"], [\"class\", \"flex center-cross\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"center-cross\"], [3, \"value\", \"valueChange\"], [3, \"name\", \"value\", \"valueChange\"]],\n    template: function OptionsModel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, OptionsModel_ul_3_Template, 2, 4, \"ul\", 3);\n        i0.ɵɵelementStart(4, \"img\", 4);\n        i0.ɵɵlistener(\"click\", function OptionsModel_Template_img_click_4_listener($event) {\n          return ctx.onToggle($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, OptionsModel_div_5_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showChosenItems);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDropDown);\n      }\n    },\n    directives: [i1.NgIf, i1.NgForOf, i2.UICheckboxComponent, i3.UIRadioboxComponent],\n    styles: [\"[_ngcontent-%COMP%]:root{--notification-size: $notification-size}.chosen-items[_ngcontent-%COMP%]:empty:after{position:absolute;top:0;left:0}.page-content-with-tabs[_ngcontent-%COMP%]{width:100%;overflow-y:auto;overflow-x:hidden;touch-action:pan-y!important}.page-content-with-tabs[_ngcontent-%COMP%]{margin-top:150px;margin-top:calc(constant(safe-area-inset-top) + 150px);margin-top:calc(env(safe-area-inset-top) + 150px);margin-bottom:0;margin-bottom:calc(constant(safe-area-inset-bottom) + 0);margin-bottom:calc(env(safe-area-inset-bottom) + 0);height:calc(100vh - 220px - env(safe-area-inset-bottom))}.invert[_ngcontent-%COMP%]{filter:invert(1)}[_nghost-%COMP%]{display:block;font-family:\\\"Poppins\\\";outline:none;min-width:120px}.input-select[_ngcontent-%COMP%]{position:relative;padding:5px;border-bottom:2px solid #cdcfd0;min-height:30px}.input-select[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{position:absolute;right:0;top:50%;transform:translateY(-50%);height:20px}.chosen-items[_ngcontent-%COMP%]:empty:after, .chosen-items[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline-block;margin:4px;font-size:.75em}.chosen-items[_ngcontent-%COMP%]{list-style-type:none}.chosen-items[_ngcontent-%COMP%]:empty:after{content:attr(data-if-empty)}.chosen-items.multiple[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:10px;border-radius:20px;border:1px solid #333}.dropdown-choices[_ngcontent-%COMP%]{padding:6px;min-height:40px}.dropdown-choices[_ngcontent-%COMP%]   .form-search[_ngcontent-%COMP%]{width:80%;height:100%;border:none!important;margin:0}.dropdown-choices[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin:.5rem;height:15px}.dropdown[_ngcontent-%COMP%]{position:relative;display:inline-block;width:100%}.dropdown-content[_ngcontent-%COMP%]{overflow-x:hidden;overflow-y:auto;margin-top:.3rem;width:100%;box-shadow:0 4px 4px #ccc;padding:12px 16px;max-height:160px!important}.dropdown-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:.85em;justify-content:space-between;margin:8px 0}.dropdown-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   checkbox[_ngcontent-%COMP%], .dropdown-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   radiobox[_ngcontent-%COMP%]{transform-origin:50% 50%;transform:scale(.75);flex-shrink:0}\"],\n    changeDetection: 0\n  });\n  return OptionsModel;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}