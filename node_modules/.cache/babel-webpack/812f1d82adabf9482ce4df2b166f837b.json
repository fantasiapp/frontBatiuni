{"ast":null,"code":"import { email } from \"./regex\";\nexport const Email = () => {\n  let lastValue = null;\n  return control => {\n    //persist the server error\n    let content = control.value,\n        errors = {};\n    if (lastValue === content && control.errors) errors = control.errors;\n    lastValue = content;\n    if (!content) return null;\n    if (!content.match(email)) errors['INVALID_FORMAT'] = ['e-mail'];\n    return Object.keys(errors).length ? errors : null;\n  };\n};\nexport const HoldError = validator => {\n  let lastValue = null;\n  return control => {\n    //persist the server error\n    let content = control.value,\n        oldErrors = lastValue === content ? control.errors : null,\n        newErrors = validator(control) || {};\n    lastValue = content;\n    if (!oldErrors) return newErrors;\n    if (!newErrors) return oldErrors;\n    return Object.assign(Object.assign({}, oldErrors), newErrors);\n  };\n};","map":null,"metadata":{},"sourceType":"module"}