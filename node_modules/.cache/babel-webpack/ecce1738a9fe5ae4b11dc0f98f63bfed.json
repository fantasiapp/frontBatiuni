{"ast":null,"code":"import { interval, race } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Destroy$ } from \"src/app/shared/common/classes\";\nimport { ConfirmAccount } from \"src/models/auth/auth.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nconst _c0 = function () {\n  return [\"\", \"connexion\"];\n};\n\nfunction EmailConfirmation_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Votre profil \\u00E0 bien \\u00E9t\\u00E9 confirm\\u00E9 !\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 5);\n    i0.ɵɵtext(6, \"Commencer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\n\nfunction EmailConfirmation_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"div\");\n    i0.ɵɵelement(2, \"div\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r2.content, \" \", ctx_r2.points, \"\");\n  }\n}\n\nexport let EmailConfirmation = /*#__PURE__*/(() => {\n  class EmailConfirmation extends Destroy$ {\n    constructor(store, cd, route) {\n      super();\n      this.store = store;\n      this.cd = cd;\n      this.route = route;\n      this.confirmed = false;\n      this.content = 'Confirmation en cours';\n      this.points = '.';\n      const token = this.route.snapshot.params.token;\n      const reply = this.store.dispatch(new ConfirmAccount(token));\n      interval(500).pipe(takeUntil(race(this.destroy$, reply))).subscribe(resp => {\n        this.points = this.points.length >= 5 ? '.' : this.points += '.';\n        this.cd.markForCheck();\n      }, err => {\n        this.content = 'Echec en raison de:';\n        this.points = 'Token invalide.'; //err\n\n        this.cd.markForCheck(); //....\n      }, () => {\n        this.confirmed = true;\n        this.cd.markForCheck();\n      });\n    }\n\n  }\n\n  EmailConfirmation.ɵfac = function EmailConfirmation_Factory(t) {\n    return new (t || EmailConfirmation)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  EmailConfirmation.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmailConfirmation,\n    selectors: [[\"email-confirmed\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"confirmation-pages\", \"cover-parent\", \"flex\", \"column\", \"center\"], [4, \"ngIf\", \"ngIfElse\"], [\"waiting_tpl\", \"\"], [1, \"success-circle\", \"flex\", \"center\"], [\"src\", \"assets/confirmation.svg\"], [3, \"routerLink\"], [1, \"ripple\"], [1, \"confirmed-with-success\"]],\n    template: function EmailConfirmation_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, EmailConfirmation_ng_container_1_Template, 7, 2, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, EmailConfirmation_ng_template_2_Template, 5, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmed)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i3.NgIf, i2.RouterLink],\n    styles: [\"[_ngcontent-%COMP%]:root{--notification-size: $notification-size}[_nghost-%COMP%]{position:absolute;left:0;top:0;right:0;bottom:0}.page-content-with-tabs[_ngcontent-%COMP%]{width:100%;overflow-y:auto;overflow-x:hidden;touch-action:pan-y!important}.page-content-with-tabs[_ngcontent-%COMP%]{margin-top:150px;margin-top:calc(constant(safe-area-inset-top) + 150px);margin-top:calc(env(safe-area-inset-top) + 150px);margin-bottom:0;margin-bottom:calc(constant(safe-area-inset-bottom) + 0);margin-bottom:calc(env(safe-area-inset-bottom) + 0);height:calc(100vh - 220px - env(safe-area-inset-bottom))}.invert[_ngcontent-%COMP%]{filter:invert(1)}@keyframes ripple{0%{top:36px;left:36px;width:0;height:0;opacity:1}to{top:0px;left:0px;width:72px;height:72px;opacity:0}}.ripple[_ngcontent-%COMP%]{display:inline-block;position:relative;width:80px;height:80px}.ripple[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{position:absolute;border:4px solid #fff;opacity:1;border-radius:50%;animation:ripple 1s cubic-bezier(0,.2,.8,1) infinite}.ripple[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(2){animation-delay:-.5s}[_nghost-%COMP%]{font-family:\\\"Poppins\\\";background-color:#0d6191}.confirmation-pages[_ngcontent-%COMP%]   .success-circle[_ngcontent-%COMP%]{border-radius:50%;background-color:#fff;width:80px;height:80px;box-shadow:#00000040 0 70px 55px,#0000001f 0 -12px 30px,#0000001f 0 4px 6px,#0000002b 0 12px 13px,#00000017 0 -3px 5px;text-align:center}button[_ngcontent-%COMP%]{background-color:#52d1bd;color:#fff;width:60%;max-width:200px}p[_ngcontent-%COMP%]{color:#fff;margin-top:25px;margin-bottom:100px}\"],\n    changeDetection: 0\n  });\n  return EmailConfirmation;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}