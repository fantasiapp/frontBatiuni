{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { UIDefaultAccessor } from \"src/app/shared/common/classes\";\nimport * as i0 from \"@angular/core\";\nexport let UINumberComponent = /*#__PURE__*/(() => {\n  class UINumberComponent extends UIDefaultAccessor {\n    constructor(cd) {\n      super(cd);\n      this.min = 0;\n      this.max = Infinity;\n      this.valueChange = new EventEmitter();\n      this._value = this.min + (this.max + this.min) / 2;\n    }\n\n    ngOnInit() {}\n\n    getInput(k) {\n      return Math.min(this.max, Math.max(this.min, this.value + k));\n    }\n\n  }\n\n  UINumberComponent.ɵfac = function UINumberComponent_Factory(t) {\n    return new (t || UINumberComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  UINumberComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UINumberComponent,\n    selectors: [[\"number\"]],\n    inputs: {\n      min: \"min\",\n      max: \"max\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UINumberComponent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"src\", \"assets/icons/minus.svg\", 3, \"click\"], [\"min\", \"0\", \"type\", \"number\", \"disabled\", \"\", 1, \"center-text\", 3, \"value\"], [\"src\", \"assets/icons/plus.svg\", 3, \"click\"]],\n    template: function UINumberComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"img\", 0);\n        i0.ɵɵlistener(\"click\", function UINumberComponent_Template_img_click_0_listener() {\n          return ctx.onChange(-1);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵelementStart(2, \"img\", 2);\n        i0.ɵɵlistener(\"click\", function UINumberComponent_Template_img_click_2_listener() {\n          return ctx.onChange(1);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.value);\n      }\n    },\n    styles: [\"[_ngcontent-%COMP%]:root{--notification-size: $notification-size}[_nghost-%COMP%]{display:inline-block}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{vertical-align:middle}input[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[_ngcontent-%COMP%]{-moz-appearance:textfield;border:none!important;outline:none!important;width:20px}img[_ngcontent-%COMP%]{width:25px;height:25px}\"],\n    changeDetection: 0\n  });\n  return UINumberComponent;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}