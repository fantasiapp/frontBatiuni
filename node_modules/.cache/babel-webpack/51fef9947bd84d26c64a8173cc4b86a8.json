{"ast":null,"code":"import { DistanceSliderConfig, SalarySliderConfig } from \"src/app/shared/common/config\";\nimport { DataQueries } from \"src/models/new/data.state\";\nimport { UISwitchComponent } from \"../components/switch/switch.component\";\nimport { Filter } from \"../directives/filter.directive\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/filter.service\";\nimport * as i2 from \"@ngxs/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../common/formerrors\";\nimport * as i5 from \"@angular-slider/ngx-slider\";\nimport * as i6 from \"../components/box/checkbox.component\";\nimport * as i7 from \"../components/switch/switch.component\"; //save computed properties\n\nexport let STFilterForm = /*#__PURE__*/(() => {\n  class STFilterForm extends Filter {\n    constructor(service, store) {\n      super(service);\n      this.store = store;\n      this.imports = {\n        DistanceSliderConfig,\n        SalarySliderConfig\n      };\n      this.name = 'ST';\n    } //cancel other filters\n\n\n    onSwitchClick(value, cancelIfTrue) {\n      if (!value) return;\n      this.switches.forEach(item => {\n        if (cancelIfTrue.includes(item)) {\n          item.value = false;\n        }\n      });\n    }\n\n    ngOnInit() {\n      super.ngOnInit(); //either precompute with defineComputedProperty\n      //or evaluate during the function call\n\n      this.create([this.defineComputedProperty('$employeeCount', post => {\n        const company = this.store.selectSnapshot(DataQueries.getById('Company', post.company)),\n              jobsForCompany = this.store.selectSnapshot(DataQueries.getMany('JobForCompany', company.jobs));\n        return jobsForCompany.reduce((acc, {\n          number\n        }) => acc + number, 0);\n      }), this.defineComputedProperty('$favorite', post => {\n        const user = this.store.selectSnapshot(DataQueries.currentUser);\n        console.log('computing favorite on', post, '=>', user.favoritePosts.includes(post.id));\n        return user.favoritePosts.includes(post.id);\n      }), this.defineComputedProperty('$viewed', post => {\n        const user = this.store.selectSnapshot(DataQueries.currentUser);\n        console.log('computing viewed on', post, '=>', user.viewedPosts.includes(post.id));\n        return user.viewedPosts.includes(post.id);\n      }), this.match('dueDate'), this.match('address'), this.some('employee', this.onlyIf('$employeeCount', count => 1 <= count && count <= 10, [], true), this.onlyIf('$employeeCount', count => count > 10 && count <= 25, [], true), this.onlyIf('$employeeCount', count => count > 25 && count <= 50, [], true), this.onlyIf('$employeeCount', count => count > 50 && count <= 100, [], true), this.onlyIf('$employeeCount', count => count > 100, [], true)), this.onlyIf('$viewed', viewed => {\n        return viewed;\n      }), this.onlyIf('$favorite', favorite => {\n        return favorite;\n      }), this.onlyIf('$candidate', candidate => candidate), this.onlyIf('counterOffer', counterOffer => counterOffer), this.onlyIf('$radius', radius => true), this.onlyIf('amount', (amount, range) => {\n        return amount >= range[0] && amount <= range[1];\n      }), this.sortBy('dueDate', (d1, d2) => {\n        console.log('sorting');\n        return new Date(d1).getTime() - new Date(d2).getTime();\n      }), this.sortBy('startDate', () => 1)]); //initialize\n\n      this.form.controls['some_employee'].controls[0].setValue(1);\n    }\n\n  }\n\n  STFilterForm.ɵfac = function STFilterForm_Factory(t) {\n    return new (t || STFilterForm)(i0.ɵɵdirectiveInject(i1.FilterService), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  STFilterForm.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: STFilterForm,\n    selectors: [[\"st-filter-form\"]],\n    viewQuery: function STFilterForm_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(UISwitchComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switches = _t);\n      }\n    },\n    inputs: {\n      name: [\"filter\", \"name\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 71,\n    vars: 10,\n    consts: [[1, \"form-control\", \"full-width\", 3, \"formGroup\"], [1, \"form-input\"], [\"type\", \"date\", \"formControlName\", \"match_dueDate\", 1, \"form-element\"], [\"src\", \"assets/calendar.png\"], [\"type\", \"text\", \"formControlName\", \"match_address\", 1, \"form-element\"], [\"formControlName\", \"if_$radius\", 3, \"options\"], [\"formControlName\", \"if_amount\", 3, \"options\", \"value\", \"highValue\"], [1, \"form-input\", \"space-children-margin\"], [\"formArrayName\", \"some_employee\"], [1, \"radio-item\"], [\"name\", \"job-type\", 1, \"grow\", 3, \"formControlName\"], [1, \"switch-container\", \"flex\", \"center-cross\"], [1, \"criteria\"], [\"formControlName\", \"if_$viewed\", 1, \"default\"], [\"formControlName\", \"if_$favorite\", 1, \"default\"], [\"formControlName\", \"if_$candidate\", 1, \"default\"], [\"formControlName\", \"if_counterOffer\", 1, \"default\"], [\"formControlName\", \"sort_dueDate\", 1, \"default\", 3, \"valueChange\"], [\"switch1\", \"\"], [\"formControlName\", \"sort_startDate\", 1, \"default\", 3, \"valueChange\"], [\"switch2\", \"\"]],\n    template: function STFilterForm_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"label\");\n        i0.ɵɵtext(3, \"Date de mission\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelement(5, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelementStart(7, \"label\");\n        i0.ɵɵtext(8, \"Adresse de chantier\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 1);\n        i0.ɵɵelementStart(11, \"label\");\n        i0.ɵɵtext(12, \"Dans un rayon autour de:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"ngx-slider\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 1);\n        i0.ɵɵelementStart(15, \"label\");\n        i0.ɵɵtext(16, \"Estimation de salaire:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"ngx-slider\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7);\n        i0.ɵɵelementStart(19, \"label\");\n        i0.ɵɵtext(20, \"Taille de l'entreprise\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(21, 8);\n        i0.ɵɵelementStart(22, \"div\", 9);\n        i0.ɵɵelement(23, \"checkbox\", 10);\n        i0.ɵɵelementStart(24, \"span\");\n        i0.ɵɵtext(25, \"Moins que 10 salari\\u00E9s\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 9);\n        i0.ɵɵelement(27, \"checkbox\", 10);\n        i0.ɵɵelementStart(28, \"span\");\n        i0.ɵɵtext(29, \"Entre 11 et 20 salari\\u00E9s\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 9);\n        i0.ɵɵelement(31, \"checkbox\", 10);\n        i0.ɵɵelementStart(32, \"span\");\n        i0.ɵɵtext(33, \"Entre 20 et 25 salari\\u00E9es\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 9);\n        i0.ɵɵelement(35, \"checkbox\", 10);\n        i0.ɵɵelementStart(36, \"span\");\n        i0.ɵɵtext(37, \"Entre 50 et 100 salari\\u00E9s\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 9);\n        i0.ɵɵelement(39, \"checkbox\", 10);\n        i0.ɵɵelementStart(40, \"span\");\n        i0.ɵɵtext(41, \"Plus de 100 salari\\u00E9s\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 7);\n        i0.ɵɵelementStart(43, \"label\");\n        i0.ɵɵtext(44, \"R\\u00E9organiser la liste selon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 11);\n        i0.ɵɵelementStart(46, \"span\", 12);\n        i0.ɵɵtext(47, \"Annonces d\\u00E9j\\u00E0 vus uniquement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(48, \"switch\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 11);\n        i0.ɵɵelementStart(50, \"span\", 12);\n        i0.ɵɵtext(51, \"Annonces favoristes uniquement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"switch\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"div\", 11);\n        i0.ɵɵelementStart(54, \"span\", 12);\n        i0.ɵɵtext(55, \"Annonces d\\u00E9j\\u00E0 postul\\u00E9es uniquement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(56, \"switch\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"div\", 11);\n        i0.ɵɵelementStart(58, \"span\", 12);\n        i0.ɵɵtext(59, \"Annonces ouverte \\u00E0 contre-proposition\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"switch\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"div\", 11);\n        i0.ɵɵelementStart(62, \"span\", 12);\n        i0.ɵɵtext(63, \"Date d'\\u00E9ch\\u00E9ance de l'annonce de la plus proche \\u00E0 la plus lointaine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"switch\", 17, 18);\n        i0.ɵɵlistener(\"valueChange\", function STFilterForm_Template_switch_valueChange_64_listener($event) {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r1 = i0.ɵɵreference(70);\n\n          return ctx.onSwitchClick($event, [_r1]);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"div\", 11);\n        i0.ɵɵelementStart(67, \"span\", 12);\n        i0.ɵɵtext(68, \"Date de publication la plus r\\u00E9cente \\u00E0 la plus anciennce\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"switch\", 19, 20);\n        i0.ɵɵlistener(\"valueChange\", function STFilterForm_Template_switch_valueChange_69_listener($event) {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(65);\n\n          return ctx.onSwitchClick($event, [_r0]);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"options\", ctx.imports.DistanceSliderConfig);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"options\", ctx.imports.SalarySliderConfig)(\"value\", 0)(\"highValue\", 100000);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControlName\", 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", 1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", 2);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", 3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", 4);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.ControlErrorsDirective, i5.ɵa, i3.FormArrayName, i6.UICheckboxComponent, i7.UISwitchComponent],\n    styles: [\"[_nghost-%COMP%]{display:block;width:100%;height:100%}switch[_ngcontent-%COMP%]  .slider{background:#ccc}\"],\n    changeDetection: 0\n  });\n  return STFilterForm;\n})();","map":null,"metadata":{},"sourceType":"module"}