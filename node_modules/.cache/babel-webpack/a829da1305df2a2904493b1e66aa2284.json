{"ast":null,"code":"export let Login = /*#__PURE__*/(() => {\n  class Login {\n    constructor(username, password) {\n      this.username = username;\n      this.password = password;\n    }\n\n  }\n\n  Login.type = '[Auth] Login';\n  return Login;\n})();\n;\nexport let Logout = /*#__PURE__*/(() => {\n  class Logout {}\n\n  Logout.type = '[Auth] Logout';\n  return Logout;\n})();\n;\nexport let ConfirmAccount = /*#__PURE__*/(() => {\n  class ConfirmAccount {\n    constructor(token) {\n      this.token = token;\n    }\n\n  }\n\n  ConfirmAccount.type = '[Auth] Confirm Account';\n  return ConfirmAccount;\n})();\n;\nexport let Register = /*#__PURE__*/(() => {\n  class Register {\n    constructor(firstname, lastname, email, password, company, Role, proposer, jobs) {\n      this.firstname = firstname;\n      this.lastname = lastname;\n      this.email = email;\n      this.password = password;\n      this.company = company;\n      this.Role = Role;\n      this.proposer = proposer;\n      this.jobs = jobs;\n    }\n\n    static fromFormGroup(group) {\n      let input = group.value;\n      return new Register(input.firstname, input.lastname, input.email, input.password, input.company, +input.role[0].id, input.proposer, input.jobs.map(job => job.id));\n    }\n\n  }\n\n  Register.type = '[Auth] Register';\n  return Register;\n})();\n;\nexport let ForgotPassword = /*#__PURE__*/(() => {\n  class ForgotPassword {\n    constructor(token, password) {\n      this.token = token;\n      this.password = password;\n    }\n\n  }\n\n  ForgotPassword.type = \"[Auth] Frogot password\";\n  return ForgotPassword;\n})();","map":null,"metadata":{},"sourceType":"module"}