{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { QueryProfile } from \"src/models/new/data.state\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../shared/components/stars/stars.component\";\nimport * as i4 from \"../../../shared/components/profile-image/profile-image.component\";\nimport * as i5 from \"../../../shared/pipes/cast.pipe\";\n\nfunction ReponseCard_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5, \"Note g\\u00E9n\\u00E9rale (4.5 par 35 personnes)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"stars\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"profile-image\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const profile_r1 = ctx.ngIf;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(profile_r1.company.name || \"Nom de l'entreprise\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", 4.5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"profile\", profile_r1);\n  }\n}\n\nexport class ReponseCard {\n  constructor(store) {\n    this.store = store;\n  }\n\n}\n\nReponseCard.ɵfac = function ReponseCard_Factory(t) {\n  return new (t || ReponseCard)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nReponseCard.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReponseCard,\n  selectors: [[\"reponse-card\"]],\n  inputs: {\n    profile$: [\"profile\", \"profile$\"]\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"class\", \"reponse-card flex row center-cross space-between\", 4, \"ngIf\"], [1, \"reponse-card\", \"flex\", \"row\", \"center-cross\", \"space-between\"], [1, \"generale-info\", \"font-Poppins\", \"flex\", \"column\", \"small-space-children-margin\"], [\"disabled\", \"\", 3, \"value\"], [3, \"profile\"]],\n  template: function ReponseCard_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ReponseCard_div_0_Template, 8, 3, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵpipe(2, \"cast\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, i0.ɵɵpipeBind1(2, 3, ctx.profile$)));\n    }\n  },\n  directives: [i2.NgIf, i3.UIStarsComponent, i4.UIProfileImageComponent],\n  pipes: [i2.AsyncPipe, i5.CastPipe],\n  styles: [\"[_ngcontent-%COMP%]:root {\\n  --notification-size: $notification-size;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  width: 100%;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  touch-action: pan-y !important;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  margin-top: 150px;\\n  margin-top: calc(constant(safe-area-inset-top) + 150px);\\n  margin-top: calc(env(safe-area-inset-top) + 150px);\\n  margin-bottom: 0;\\n  margin-bottom: calc(constant(safe-area-inset-bottom) + 0);\\n  margin-bottom: calc(env(safe-area-inset-bottom) + 0);\\n  height: calc(100vh - 220px - env(safe-area-inset-bottom));\\n}\\n\\n.invert[_ngcontent-%COMP%] {\\n  filter: invert(1);\\n}\\n\\n.reponse-card[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  background-color: white;\\n  width: 100%;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  padding: 1rem;\\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\\n  border-radius: 12px;\\n}\\n\\n.reponse-card[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.01);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"],\n  changeDetection: 0\n});\n\n__decorate([QueryProfile()], ReponseCard.prototype, \"profile$\", void 0);","map":{"version":3,"sources":["/Users/jlw/Documents/frontBatiuni/src/app/desktop/ui/reponse-card/reponse-card.ts"],"names":["__decorate","QueryProfile","i0","i1","i2","i3","i4","i5","ReponseCard_div_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","profile_r1","ngIf","ɵɵadvance","ɵɵtextInterpolate","company","name","ɵɵproperty","ReponseCard","constructor","store","ɵfac","ReponseCard_Factory","t","ɵɵdirectiveInject","Store","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","profile$","decls","vars","consts","template","ReponseCard_Template","ɵɵtemplate","ɵɵpipe","ɵɵpipeBind1","directives","NgIf","UIStarsComponent","UIProfileImageComponent","pipes","AsyncPipe","CastPipe","styles","changeDetection","prototype"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { QueryProfile } from \"src/models/new/data.state\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../shared/components/stars/stars.component\";\nimport * as i4 from \"../../../shared/components/profile-image/profile-image.component\";\nimport * as i5 from \"../../../shared/pipes/cast.pipe\";\nfunction ReponseCard_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5, \"Note g\\u00E9n\\u00E9rale (4.5 par 35 personnes)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"stars\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"profile-image\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const profile_r1 = ctx.ngIf;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(profile_r1.company.name || \"Nom de l'entreprise\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", 4.5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"profile\", profile_r1);\n} }\nexport class ReponseCard {\n    constructor(store) {\n        this.store = store;\n    }\n}\nReponseCard.ɵfac = function ReponseCard_Factory(t) { return new (t || ReponseCard)(i0.ɵɵdirectiveInject(i1.Store)); };\nReponseCard.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ReponseCard, selectors: [[\"reponse-card\"]], inputs: { profile$: [\"profile\", \"profile$\"] }, decls: 3, vars: 5, consts: [[\"class\", \"reponse-card flex row center-cross space-between\", 4, \"ngIf\"], [1, \"reponse-card\", \"flex\", \"row\", \"center-cross\", \"space-between\"], [1, \"generale-info\", \"font-Poppins\", \"flex\", \"column\", \"small-space-children-margin\"], [\"disabled\", \"\", 3, \"value\"], [3, \"profile\"]], template: function ReponseCard_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, ReponseCard_div_0_Template, 8, 3, \"div\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵpipe(2, \"cast\");\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, i0.ɵɵpipeBind1(2, 3, ctx.profile$)));\n    } }, directives: [i2.NgIf, i3.UIStarsComponent, i4.UIProfileImageComponent], pipes: [i2.AsyncPipe, i5.CastPipe], styles: [\"[_ngcontent-%COMP%]:root {\\n  --notification-size: $notification-size;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  width: 100%;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  touch-action: pan-y !important;\\n}\\n\\n.page-content-with-tabs[_ngcontent-%COMP%] {\\n  margin-top: 150px;\\n  margin-top: calc(constant(safe-area-inset-top) + 150px);\\n  margin-top: calc(env(safe-area-inset-top) + 150px);\\n  margin-bottom: 0;\\n  margin-bottom: calc(constant(safe-area-inset-bottom) + 0);\\n  margin-bottom: calc(env(safe-area-inset-bottom) + 0);\\n  height: calc(100vh - 220px - env(safe-area-inset-bottom));\\n}\\n\\n.invert[_ngcontent-%COMP%] {\\n  filter: invert(1);\\n}\\n\\n.reponse-card[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  background-color: white;\\n  width: 100%;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  padding: 1rem;\\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\\n  border-radius: 12px;\\n}\\n\\n.reponse-card[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.01);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"], changeDetection: 0 });\n__decorate([\n    QueryProfile()\n], ReponseCard.prototype, \"profile$\", void 0);\n"]},"metadata":{},"sourceType":"module"}