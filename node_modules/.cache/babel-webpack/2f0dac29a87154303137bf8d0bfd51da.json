{"ast":null,"code":"import { ElementRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"panel\"];\nconst _c1 = [\"*\"];\nexport let UIAccordion = /*#__PURE__*/(() => {\n  class UIAccordion {\n    constructor() {\n      this.title = 'Accordion';\n      this._open = false;\n    }\n\n    get open() {\n      return this._open;\n    }\n\n    toggle() {\n      const DOMPanel = this.panel.nativeElement;\n      this._open = !this._open;\n      if (this.open) DOMPanel.style.maxHeight = DOMPanel.scrollHeight + 'px';else DOMPanel.style.maxHeight = '0';\n    }\n\n  }\n\n  UIAccordion.ɵfac = function UIAccordion_Factory(t) {\n    return new (t || UIAccordion)();\n  };\n\n  UIAccordion.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UIAccordion,\n    selectors: [[\"accordion\"]],\n    viewQuery: function UIAccordion_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n      }\n    },\n    inputs: {\n      title: \"title\"\n    },\n    ngContentSelectors: _c1,\n    decls: 6,\n    vars: 3,\n    consts: [[\"id\", \"accordion\", 1, \"name\", 3, \"click\"], [\"src\", \"assets/arrowdown.svg\"], [1, \"content\"], [\"panel\", \"\"]],\n    template: function UIAccordion_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵlistener(\"click\", function UIAccordion_Template_h3_click_0_listener() {\n          return ctx.toggle();\n        });\n        i0.ɵɵtext(1);\n        i0.ɵɵelement(2, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2, 3);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.title, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"open\", ctx.open);\n      }\n    },\n    styles: [\"[_ngcontent-%COMP%]:root{--notification-size: $notification-size}.page-content-with-tabs[_ngcontent-%COMP%]{width:100%;overflow-y:auto;overflow-x:hidden;touch-action:pan-y!important}.page-content-with-tabs[_ngcontent-%COMP%]{margin-top:150px;margin-top:calc(constant(safe-area-inset-top) + 150px);margin-top:calc(env(safe-area-inset-top) + 150px);margin-bottom:0;margin-bottom:calc(constant(safe-area-inset-bottom) + 0);margin-bottom:calc(env(safe-area-inset-bottom) + 0);height:calc(100vh - 220px - env(safe-area-inset-bottom))}.invert[_ngcontent-%COMP%]{filter:invert(1)}[_nghost-%COMP%]{display:block;font:inherit;font-family:\\\"Poppins\\\"}img[_ngcontent-%COMP%]{vertical-align:middle}.name[_ngcontent-%COMP%]{color:#0d6191;margin:20px 0}.name[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{transform-origin:center center;transition:transform .15s ease-out 50ms;transform:scale(1.2)}.name[_ngcontent-%COMP%]   img.open[_ngcontent-%COMP%]{transform:scale(1.2) rotate(-90deg)}.blue[_ngcontent-%COMP%], .name[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{filter:invert(12%) sepia(96%) saturate(7052%) hue-rotate(180deg) brightness(78%) contrast(111%)}.content[_ngcontent-%COMP%]{overflow:hidden;max-height:0;transition:max-height .2s ease-out 0s}\"],\n    changeDetection: 0\n  });\n  return UIAccordion;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}